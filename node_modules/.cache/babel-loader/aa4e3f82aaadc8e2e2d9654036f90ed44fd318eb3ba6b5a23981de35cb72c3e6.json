{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  products: [],\n  image: 'image',\n  category: 'category',\n  rating: 'rating',\n  price: 'price',\n  loading: 'idle' // Use 'idle' as the initial state for better readability\n};\nexport const fetchProduct = createAsyncThunk('converter/fetchProduct', async () => {\n  const response = await fetch('https://fakestoreapi.com/products');\n  const data = await response.json();\n  return data;\n});\nconst productSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {\n    setImage: (state, action) => {\n      state.image = action.payload;\n    },\n    setCategory: (state, action) => {\n      state.category = action.payload;\n    },\n    setPrice: (state, action) => {\n      state.price = action.payload;\n    },\n    setRating: (state, action) => {\n      state.rating = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchProduct.pending, state => {\n      state.loading = 'loading';\n    }).addCase(fetchProduct.fulfilled, (state, action) => {\n      state.loading = 'succeeded';\n      state.products = action.payload;\n    }).addCase(fetchProduct.rejected, state => {\n      state.loading = 'failed';\n    });\n  }\n});\nexport const {\n  setImage,\n  setCategory,\n  setPrice,\n  setRating\n} = productSlice.actions;\nexport default productSlice.reducer;\n\n// import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\n// const initialstate = {\n\n//     product : [],\n//     image : '',\n//     category : '',\n//     rating : '',\n//     price : '',\n//     Loading : 'loading'\n\n// }\n\n// const fetchProduct = createAsyncThunk('converter/fetchProduct',async () => {\n//     const fetchApi = await fetch('https://fakestoreapi.com/products')\n//     const response = await fetchApi.json();\n//     return response;\n// })\n\n// const productSlice = createSlice({\n//     name : 'product',\n//     initialState:initialstate,\n//     reducers : {\n//         setimage : (state,action) => {\n//             state.image=action.payload\n//         },\n//         setcategory : (state,action) => {\n//             state.category=action.payload\n//         },\n//         setprice : (state,action) => {\n//             state.price=action.payload\n//         },\n//         setrating : (state,action) => {\n//             state.rating=action.payload\n//         }\n//     },\n//     extraReducers : (builder) => {\n//         builder.addCase(fetchProduct.pending, (state) => {\n//             state.Loading='loading'\n//         });\n//         builder.addCase(fetchProduct.fulfilled, (state,action) => {\n//             state.Loading='succeeded'\n//             state.product=action.payload\n//         });\n//         builder.addCase(fetchProduct.rejected, (state,action) => {\n//             state.Loading='failed'\n//         })\n//     }\n// })","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","products","image","category","rating","price","loading","fetchProduct","response","fetch","data","json","productSlice","name","reducers","setImage","state","action","payload","setCategory","setPrice","setRating","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["C:/Users/rkroc/OneDrive/Desktop/mentem projects/e_comm/src/features/productslice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    products: [],\r\n    image: 'image',\r\n    category: 'category',\r\n    rating: 'rating',\r\n    price: 'price',\r\n    loading: 'idle', // Use 'idle' as the initial state for better readability\r\n};\r\n\r\nexport const fetchProduct = createAsyncThunk('converter/fetchProduct', async () => {\r\n    const response = await fetch('https://fakestoreapi.com/products');\r\n    const data = await response.json();\r\n    return data;\r\n});\r\n\r\nconst productSlice = createSlice({\r\n    name: 'product',\r\n    initialState,\r\n    reducers: {\r\n        setImage: (state, action) => {\r\n            state.image = action.payload;\r\n        },\r\n        setCategory: (state, action) => {\r\n            state.category = action.payload;\r\n        },\r\n        setPrice: (state, action) => {\r\n            state.price = action.payload;\r\n        },\r\n        setRating: (state, action) => {\r\n            state.rating = action.payload;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchProduct.pending, (state) => {\r\n                state.loading = 'loading';\r\n            })\r\n            .addCase(fetchProduct.fulfilled, (state, action) => {\r\n                state.loading = 'succeeded';\r\n                state.products = action.payload;\r\n            })\r\n            .addCase(fetchProduct.rejected, (state) => {\r\n                state.loading = 'failed';\r\n            });\r\n    },\r\n});\r\n\r\nexport const { setImage, setCategory, setPrice, setRating } = productSlice.actions;\r\n\r\nexport default productSlice.reducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// const initialstate = {\r\n\r\n//     product : [],\r\n//     image : '',\r\n//     category : '',\r\n//     rating : '',\r\n//     price : '',\r\n//     Loading : 'loading'\r\n\r\n// }\r\n\r\n// const fetchProduct = createAsyncThunk('converter/fetchProduct',async () => {\r\n//     const fetchApi = await fetch('https://fakestoreapi.com/products')\r\n//     const response = await fetchApi.json();\r\n//     return response;\r\n// })\r\n\r\n// const productSlice = createSlice({\r\n//     name : 'product',\r\n//     initialState:initialstate,\r\n//     reducers : {\r\n//         setimage : (state,action) => {\r\n//             state.image=action.payload\r\n//         },\r\n//         setcategory : (state,action) => {\r\n//             state.category=action.payload\r\n//         },\r\n//         setprice : (state,action) => {\r\n//             state.price=action.payload\r\n//         },\r\n//         setrating : (state,action) => {\r\n//             state.rating=action.payload\r\n//         }\r\n//     },\r\n//     extraReducers : (builder) => {\r\n//         builder.addCase(fetchProduct.pending, (state) => {\r\n//             state.Loading='loading'\r\n//         });\r\n//         builder.addCase(fetchProduct.fulfilled, (state,action) => {\r\n//             state.Loading='succeeded'\r\n//             state.product=action.payload\r\n//         });\r\n//         builder.addCase(fetchProduct.rejected, (state,action) => {\r\n//             state.Loading='failed'\r\n//         })\r\n//     }\r\n// })\r\n\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,MAAMC,YAAY,GAAG;EACjBC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE,OAAO;EACdC,QAAQ,EAAE,UAAU;EACpBC,MAAM,EAAE,QAAQ;EAChBC,KAAK,EAAE,OAAO;EACdC,OAAO,EAAE,MAAM,CAAE;AACrB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGT,gBAAgB,CAAC,wBAAwB,EAAE,YAAY;EAC/E,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;EACjE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACf,CAAC,CAAC;AAEF,MAAME,YAAY,GAAGb,WAAW,CAAC;EAC7Bc,IAAI,EAAE,SAAS;EACfb,YAAY;EACZc,QAAQ,EAAE;IACNC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACzBD,KAAK,CAACd,KAAK,GAAGe,MAAM,CAACC,OAAO;IAChC,CAAC;IACDC,WAAW,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACb,QAAQ,GAAGc,MAAM,CAACC,OAAO;IACnC,CAAC;IACDE,QAAQ,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACzBD,KAAK,CAACX,KAAK,GAAGY,MAAM,CAACC,OAAO;IAChC,CAAC;IACDG,SAAS,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACZ,MAAM,GAAGa,MAAM,CAACC,OAAO;IACjC;EACJ,CAAC;EACDI,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACjB,YAAY,CAACkB,OAAO,EAAGT,KAAK,IAAK;MACtCA,KAAK,CAACV,OAAO,GAAG,SAAS;IAC7B,CAAC,CAAC,CACDkB,OAAO,CAACjB,YAAY,CAACmB,SAAS,EAAE,CAACV,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACV,OAAO,GAAG,WAAW;MAC3BU,KAAK,CAACf,QAAQ,GAAGgB,MAAM,CAACC,OAAO;IACnC,CAAC,CAAC,CACDM,OAAO,CAACjB,YAAY,CAACoB,QAAQ,EAAGX,KAAK,IAAK;MACvCA,KAAK,CAACV,OAAO,GAAG,QAAQ;IAC5B,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAES,QAAQ;EAAEI,WAAW;EAAEC,QAAQ;EAAEC;AAAU,CAAC,GAAGT,YAAY,CAACgB,OAAO;AAElF,eAAehB,YAAY,CAACiB,OAAO;;AA0CnC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}